import{s as r}from"./supabase.kJRL6j1B.js";import{R as l}from"./index.DbYiSJ-C.js";const f=e=>{let t;const s=new Set,i=(n,u)=>{const o=typeof n=="function"?n(t):n;if(!Object.is(o,t)){const S=t;t=u??(typeof o!="object"||o===null)?o:Object.assign({},t,o),s.forEach(b=>b(t,S))}},a=()=>t,c={setState:i,getState:a,getInitialState:()=>g,subscribe:n=>(s.add(n),()=>s.delete(n))},g=t=e(i,a,c);return c},m=e=>e?f(e):f,p=e=>e;function y(e,t=p){const s=l.useSyncExternalStore(e.subscribe,()=>t(e.getState()),()=>t(e.getInitialState()));return l.useDebugValue(s),s}const d=e=>{const t=m(e),s=i=>y(t,i);return Object.assign(s,t),s},h=e=>e?d(e):d,A=h(e=>({user:null,profile:null,isAdmin:!1,loading:!0,setUser:t=>e({user:t}),setProfile:t=>e({profile:t}),setLoading:t=>e({loading:t}),signOut:async()=>{await r.auth.signOut(),e({user:null,profile:null,isAdmin:!1})},checkUser:async()=>{try{e({loading:!0});const{data:{user:t}}=await r.auth.getUser();if(t){const{data:s}=await r.from("profiles").select("*").eq("id",t.id).single();e({user:t,profile:s,isAdmin:s?.role==="admin"})}}catch(t){console.error("Error checking user:",t)}finally{e({loading:!1})}}}));export{A as u};
